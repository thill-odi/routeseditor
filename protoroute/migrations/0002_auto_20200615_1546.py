# Generated by Django 3.0.7 on 2020-06-15 15:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('protoroute', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefLabel', models.CharField(max_length=100, verbose_name='Preferred Label (English)')),
                ('identifier', models.URLField(verbose_name='Identifier')),
            ],
        ),
        migrations.CreateModel(
            name='AmenityFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75)),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headline', models.CharField(max_length=100)),
                ('body', models.TextField()),
                ('backstory', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Distance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(verbose_name='Distance')),
                ('unit', models.CharField(default='km', max_length=6, verbose_name='Unit')),
            ],
        ),
        migrations.CreateModel(
            name='GeoCoordinates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField(verbose_name='Latitude')),
                ('longitude', models.FloatField(verbose_name='Longitude')),
            ],
        ),
        migrations.CreateModel(
            name='GeoPath',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('map_type', models.CharField(choices=[('RouteMap', 'RouteMap'), ('ElevationMap', 'ElevationMap'), ('CustomMap', 'CustomMap')], max_length=12)),
                ('url', models.URLField()),
                ('encoding_format', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='IndicativeDuration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.CharField(max_length=10, verbose_name='Duration (8601)')),
            ],
        ),
        migrations.CreateModel(
            name='MapImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('map_type', models.CharField(choices=[('RouteMap', 'RouteMap'), ('ElevationMap', 'ElevationMap'), ('CustomMap', 'CustomMap')], max_length=12)),
                ('image', models.URLField()),
                ('encoding_format', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='MapReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('map_series', models.CharField(max_length=10)),
                ('map_number', models.CharField(max_length=10)),
                ('grid_reference', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Provenance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('version', models.DateField()),
                ('description', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='RouteDesignation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route_des_term', models.CharField(max_length=100, verbose_name='Route Designation Term')),
                ('description', models.CharField(max_length=250)),
                ('url', models.URLField(verbose_name='Formal Definition URL')),
            ],
        ),
        migrations.CreateModel(
            name='RouteDifficulty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('difficulty_term', models.CharField(max_length=15)),
                ('description', models.CharField(max_length=250)),
                ('difficulty_defurl', models.URLField(verbose_name='Difficulty Definition URL')),
            ],
        ),
        migrations.CreateModel(
            name='RouteGradient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_gradient', models.CharField(default='0%', max_length=10)),
                ('avg_gradient', models.CharField(default='0%', max_length=10)),
                ('gradient_term', models.CharField(max_length=100, verbose_name='Gradient Term')),
                ('gradient_defurl', models.URLField(verbose_name='Gradient Definition URL')),
                ('description', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='RouteLegalAdvisory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=250)),
                ('legal_defurl', models.URLField(verbose_name='Legal Definition URL')),
                ('route_designation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='protoroute.RouteDesignation', verbose_name='Route Designation')),
            ],
        ),
        migrations.CreateModel(
            name='RoutePoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('is_access_point', models.BooleanField(verbose_name='Is Access Point')),
                ('is_preferred_access_point', models.BooleanField(verbose_name='Is Preferred Access Point')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('headline', models.CharField(blank=True, max_length=200, verbose_name='Headline (Brief Description)')),
                ('same_as', models.URLField(verbose_name='Same As')),
            ],
        ),
        migrations.CreateModel(
            name='RouteSegmentGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_as_url', models.URLField(verbose_name='@id')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=250)),
                ('alternatives', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='protoroute.RouteSegmentGroup', verbose_name='Alternative Group To')),
            ],
        ),
        migrations.CreateModel(
            name='TransportNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transport_mode', models.CharField(choices=[('Bus', 'Bus'), ('Rail', 'Rail'), ('Road', 'Road'), ('Foot', 'Foot'), ('Bicycle', 'Bicycle')], max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('route_point', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.RoutePoint')),
            ],
        ),
        migrations.CreateModel(
            name='UserGeneratedContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spatial_coverage', models.CharField(max_length=500)),
                ('associated_media', models.CharField(max_length=500)),
            ],
        ),
        migrations.RemoveField(
            model_name='personandorganization',
            name='route_guide',
        ),
        migrations.RemoveField(
            model_name='personandorganization',
            name='route_guide_segment',
        ),
        migrations.RemoveField(
            model_name='routeguide',
            name='type',
        ),
        migrations.RemoveField(
            model_name='routeguidesegment',
            name='type',
        ),
        migrations.RemoveField(
            model_name='verificationrecord',
            name='route_guide',
        ),
        migrations.RemoveField(
            model_name='verificationrecord',
            name='route_guide_segment',
        ),
        migrations.AddField(
            model_name='routeguide',
            name='author',
            field=models.ManyToManyField(to='protoroute.PersonAndOrganization', verbose_name='Author'),
        ),
        migrations.AddField(
            model_name='routeguide',
            name='verification_record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.VerificationRecord'),
        ),
        migrations.AddField(
            model_name='routeguidesegment',
            name='verification_record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.VerificationRecord'),
        ),
        migrations.DeleteModel(
            name='QuantitativeValue',
        ),
        migrations.AddField(
            model_name='usergeneratedcontent',
            name='accountable_person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='protoroute.PersonAndOrganization'),
        ),
        migrations.AddField(
            model_name='usergeneratedcontent',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_by', to='protoroute.PersonAndOrganization'),
        ),
        migrations.AddField(
            model_name='routesegmentgroup',
            name='segments',
            field=models.ManyToManyField(to='protoroute.RouteGuideSegment', verbose_name='Includes Segments'),
        ),
        migrations.AddField(
            model_name='routepoint',
            name='route_guide',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.RouteGuide'),
        ),
        migrations.AddField(
            model_name='routepoint',
            name='route_guide_segment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.RouteGuideSegment'),
        ),
        migrations.AddField(
            model_name='routelegaladvisory',
            name='route_guide',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.RouteGuide'),
        ),
        migrations.AddField(
            model_name='routelegaladvisory',
            name='route_guide_segment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.RouteGuideSegment'),
        ),
        migrations.AddField(
            model_name='routegradient',
            name='route_guide',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.RouteGuide'),
        ),
        migrations.AddField(
            model_name='routegradient',
            name='route_guide_segment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.RouteGuideSegment'),
        ),
        migrations.AddField(
            model_name='routegradient',
            name='total_elevation_gain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='total_elevation_gain', to='protoroute.Distance'),
        ),
        migrations.AddField(
            model_name='routegradient',
            name='total_elevation_loss',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='total_elevation_loss', to='protoroute.Distance'),
        ),
        migrations.AddField(
            model_name='provenance',
            name='publisher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='protoroute.PersonAndOrganization'),
        ),
        migrations.AddField(
            model_name='mapreference',
            name='route_point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='protoroute.RoutePoint'),
        ),
        migrations.AddField(
            model_name='mapimage',
            name='route_guide',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.RouteGuide'),
        ),
        migrations.AddField(
            model_name='mapimage',
            name='route_guide_segment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.RouteGuideSegment'),
        ),
        migrations.AddField(
            model_name='geopath',
            name='route_guide',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.RouteGuide'),
        ),
        migrations.AddField(
            model_name='geopath',
            name='route_guide_segment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.RouteGuideSegment'),
        ),
        migrations.AddField(
            model_name='geocoordinates',
            name='route_point',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.RoutePoint'),
        ),
        migrations.AddField(
            model_name='distance',
            name='route_point',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='elevation', to='protoroute.RoutePoint'),
        ),
        migrations.AddField(
            model_name='amenityfeature',
            name='route_point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='protoroute.RoutePoint'),
        ),
        migrations.AddField(
            model_name='personandorganization',
            name='map_reference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.MapReference', verbose_name='publisher'),
        ),
        migrations.AddField(
            model_name='routeguide',
            name='activity',
            field=models.ManyToManyField(to='protoroute.Activity'),
        ),
        migrations.AddField(
            model_name='routeguide',
            name='distance',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.Distance'),
        ),
        migrations.AddField(
            model_name='routeguide',
            name='is_based_on',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.Provenance'),
        ),
        migrations.AddField(
            model_name='routeguide',
            name='route_difficulty',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.RouteDifficulty'),
        ),
        migrations.AddField(
            model_name='routeguidesegment',
            name='activity',
            field=models.ManyToManyField(to='protoroute.Activity'),
        ),
        migrations.AddField(
            model_name='routeguidesegment',
            name='additional_info',
            field=models.ManyToManyField(to='protoroute.Article'),
        ),
        migrations.AddField(
            model_name='routeguidesegment',
            name='category',
            field=models.ManyToManyField(to='protoroute.Category'),
        ),
        migrations.AddField(
            model_name='routeguidesegment',
            name='distance',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.Distance'),
        ),
        migrations.AddField(
            model_name='routeguidesegment',
            name='route_difficulty',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='protoroute.RouteDifficulty'),
        ),
    ]
